---
# tasks file for 05-prep-inst
  - include_vars: "{{ playbook_dir }}/vars.yml"  


  - name: Get home user
    shell: echo ${HOME}   
    register: home_dir


  - name: Copy sample inventory file
    shell: |
      cd {{ home_dir.stdout }}/deployment/kubespray
      cp -rfp inventory/sample inventory/mycluster
      cd
      chown -R debian:debian {{ home_dir.stdout }}/deployment/kubespray       
  
  - name: Configure init script
    template:
      src: init_script.sh.j2
      dest: "{{ home_dir.stdout }}/init_script.sh"
  
  - name: Exec init script   
    shell: "bash {{ home_dir.stdout }}/init_script.sh"
    register: out

  - debug:
      var: out.stdout   

  - name: Templates all.yaml.j2
    template:
      src: all.yaml.j2
      dest: "{{ home_dir.stdout }}/deployment/kubespray/inventory/mycluster/group_vars/all/all.yml"
      mode: "0644"
      owner: debian
      group: debian

  - name: Templates hosts.yaml.j2 
    template:
      src: hosts.yaml.j2
      dest: "{{ home_dir.stdout }}/deployment/kubespray/inventory/mycluster/hosts.yaml"
      mode: "0644"
      owner: debian
      group: debian

  - name: Change values
    shell: |    
      sed -i 's/container_manager: docker/container_manager: containerd/g' {{ home_dir.stdout }}/deployment/kubespray/inventory/mycluster/group_vars/k8s_cluster/k8s-cluster.yml
      sed -i 's/etcd_deployment_type: docker/etcd_deployment_type: host/g' {{ home_dir.stdout }}/deployment/kubespray/inventory/mycluster/group_vars/etcd.yml
      chown -R debian:debian {{ home_dir.stdout }}/deployment/kubespray         

  - name: Copy the workaround file
    copy:
      src: download_file.yml
      dest: "{{ home_dir.stdout }}/deployment/kubespray/roles/download/tasks/download_file.yml"

  - name: Clear hosts file
    file:
      path: /tmp/hosts
      state: absent

  - name: Create updated hosts file
    shell: |
      echo {{ item.name }} >> /tmp/hosts
    loop:
      "{{ all }}"

 
  - name: Scale ( connect to the bastian and follow the log /tmp/kubespray.log )
    shell: |
      cd {{ home_dir.stdout }}/deployment/kubespray
      for f in `grep -lr  "no_log: True" *`; do sed -i 's|no_log: True|no_log: False|g' ${f}; done
      for f in `grep -lr  "no_log: true" *`; do sed -i 's|no_log: true|no_log: false|g' ${f}; done
      for f in `grep -lr -i 'unsafe_show_logs: false' *`; do sed -i 's|unsafe_show_logs: false|unsafe_show_logs: true|g' ${f}; done

      k8sfp=`mktemp`
      osfp=`mktemp`
      grep -P '\w+-worker-\d+' /tmp/hosts | sort -V > ${osfp}
      kubectl get nodes -o custom-columns=NAME:.metadata.name | grep -P '\w+-worker-\d+' | grep -v "^NAME" | sort -V > ${k8sfp}

      limit_str=""
      for i in `comm -23 <(sort -V ${osfp}) <(sort -V ${k8sfp})`; do
        limit_str=${limit_str},${i}
      done
      limit_str=$(sed 's|^,||g' <<< ${limit_str})
      limit_str=$(sed 's|,$||g' <<< ${limit_str})
      if [ ! -z "${limit_str}" ]; then 
        {{ home_dir.stdout }}/.local/bin/ansible-playbook -i inventory/mycluster/hosts.yaml --become --become-user=root --limit ${limit_str} cluster.yml > /tmp/kubespray.log
      fi
    args:
      executable: /bin/bash



   
    

